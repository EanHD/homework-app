# Tasks: Sprint M1 — Notifications + UI Polish

[Orientation & SpecKit]
- T100: Read `.github/` SpecKit docs; print 10–12 line summary + supported slash commands.
- T101: Print project map (framework, build tool, entry points, SW path, Supabase paths).

[Notifications: Audit & Fix]
- T110: Locate service worker and registration code; verify scope and registration timing.
- T111: Add cache-busting/versioning for SW (e.g., include build hash; force update flow).
- T112: Audit permission flow; ensure graceful handling for denied/default and unsupported browsers.
- T113: Identify where push subscription is created and stored; show schema and write path.
- T114: Supabase: list deployed functions; show `deno.json` flags (verify_jwt on/off) per function.
- T115: Confirm CORS module (e.g., `supabase/functions/_shared/cors.ts`); list exact allowed origins; fix if needed.
- T116: Provide successful CORS preflight example (`curl -X OPTIONS …`) and document it.
- T117: Create `scripts/test-push.[ts|js]` to trigger a test notification to the current subscription.
- T118: Add ENV/VAPID key handling docs and verify HTTPS origin in prod.
- T119: Produce `NOTIFICATIONS_REPORT.md` (architecture, failure points, diffs, commands, logs/screenshots).

[UI Polish]
- T130: Fix oversized header; ensure content starts visible at typical mobile heights.
- T131: Fix bottom bar overlap; add `padding-bottom` using `env(safe-area-inset-bottom)` or equivalent.
- T132: Replace brittle `100vh` mobile heights; use `min-height: 100dvh` or calc with safe-areas where supported and fallbacks.
- T133: Ensure lists don’t clip at bottom; verify scrolling and keyboard interactions.
- T134: Produce `UI_REPORT.md` with before/after snippets and screenshots.

[Tests & CI]
- T140: Add Playwright (or similar) test for subscription flow (mock push receipt if needed).
- T141: Add simple layout guard (DOM assertions or screenshot compare) to catch future clipping/overlap.
- T142: Integrate tests into CI (reuse SpecKit CI pipeline if present).

[Docs & Smoke Test]
- T150: Create `SMOKE_TEST.md` with copy-paste commands for dev and prod validation.
- T151: Open PR(s) with checklists, link screenshots/logs, and short release notes.

[Done When]
- D190: I can run SMOKE_TEST locally and in prod; receive a test push; no visual clipping or overlap; CI green with new tests.

Please start by executing T100–T101 and post:
1) “SpecKit Summary & Slash Commands”
2) Project map
Then continue through T110+ in order, creating branches:
- feat/notifications-m1
- fix/ui-safe-area-m1
- chore/tests-ci-m1
Open PRs as work completes.
